/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Fiches;

import java.awt.Dimension;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.geom.RoundRectangle2D;
import java.io.IOException;
import javax.swing.Icon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.NO_OPTION;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import static javax.swing.JOptionPane.YES_OPTION;
import javax.swing.JPanel;
import jeu_isotopic_256.Jouer;

/**
 *
 * @author Lubos
 */
public class FJouer extends javax.swing.JDialog implements KeyListener {

    
    /**
     * Creates new form FJouer
     */
    private Frame parent;
    private JLabel[][]tabLab;
    private int Tgrille;
    private Jouer Partie;
    private String ELmaxNom;    
        
    
    //private final Icon ClassementElement[]={mm_choixjeu.png}; 
    
    public FJouer(java.awt.Frame parent, boolean modal)  {
        super(parent, modal);
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setLocationRelativeTo(null);
        this.addKeyListener(this);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        setShape(new RoundRectangle2D.Double(0,0,getWidth(),getHeight(),50,50));
    }

    public Jouer getPartie() {
        return Partie;
    }

    public String getELmaxNom() {
        return ELmaxNom;
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pGrille = new javax.swing.JPanel();
        jScore = new javax.swing.JLabel();
        jElmax = new javax.swing.JLabel();
        JFJouer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pGrille.setFocusable(false);
        pGrille.setOpaque(false);

        javax.swing.GroupLayout pGrilleLayout = new javax.swing.GroupLayout(pGrille);
        pGrille.setLayout(pGrilleLayout);
        pGrilleLayout.setHorizontalGroup(
            pGrilleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );
        pGrilleLayout.setVerticalGroup(
            pGrilleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );

        getContentPane().add(pGrille, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 470, 480));

        jScore.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jScore.setForeground(new java.awt.Color(204, 255, 255));
        jScore.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jScore.setText("0");
        getContentPane().add(jScore, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 23, 120, 20));

        jElmax.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jElmax.setForeground(new java.awt.Color(204, 255, 255));
        jElmax.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jElmax.setText("Og");
        getContentPane().add(jElmax, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 130, 20));

        JFJouer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fond_FJouer (2).gif"))); // NOI18N
        getContentPane().add(JFJouer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void Init() throws IOException{
        Partie=new Jouer();
        ELmaxNom=Partie.ChargerPartie();
        Tgrille=Partie.getTgrille();
        creation();
        Partie.debuter();
        Partie.afficher(tabLab);
        jScore.setText(Long.toString(Partie.getScore()));
        jElmax.setText(ELmaxNom);
    }
    
    public void creation(){
        this.pGrille.removeAll();
        //créer le tableau de labels
        tabLab = new JLabel[Tgrille][Tgrille];
        //créer un gestionnaire de positionnement et l’associer au panel
        GridLayout gest = new GridLayout(0,Tgrille);
        pGrille.setLayout(gest);
        //créer les labels
        for (int i=0;i<Tgrille;i++){
            for (int j=0; j<Tgrille;j++){
                    
                // créer un label
                JLabel lab= new JLabel ();
                // définir la taille du label
                Dimension dim = new Dimension(150,150);
                lab.setPreferredSize(dim);
                // ajouter le label dans le tableau
                tabLab[i][j]=lab;
                // ajouter le label dans le panel
                pGrille.add(tabLab[i][j]);
            }
        }
    }
    
    public void Init(int Tgrille,String ElmaxNom){
        this.ELmaxNom=ElmaxNom;
        this.Tgrille=Tgrille;
        Partie=new Jouer(Tgrille);
        creation();
        Partie.debuter(Tgrille,ElmaxNom);
        //Partie.debuterTest(Tgrille);
        Partie.afficher(tabLab);
        jScore.setText(Long.toString(Partie.getScore()));
        jElmax.setText(ELmaxNom);
    }

    
    @Override
    public void keyPressed(KeyEvent e) {
        // Récupérez la touche qui a été enfoncée
        if (Partie.FinPartie().equals("CONTINUE")){
            int keyCode = e.getKeyCode();

            // Vérifiez si la touche enfoncée est Z, Q, S ou D
            switch (keyCode) {
                case KeyEvent.VK_Z: // Effectuez une action pour la touche Z
                    Partie.AplDeplacementFusion("Z");
                    Partie.afficher(tabLab);
                    break;
                case KeyEvent.VK_Q: // Effectuez une action pour la touche Q
                    Partie.AplDeplacementFusion("Q");
                    Partie.afficher(tabLab);
                    break;
                case KeyEvent.VK_S: // Effectuez une action pour la touche S
                    Partie.AplDeplacementFusion("S");
                    Partie.afficher(tabLab);
                    break;
                case KeyEvent.VK_D: // Effectuez une action pour la touche D
                    Partie.AplDeplacementFusion("D");
                    Partie.afficher(tabLab);
                    break;
                case KeyEvent.VK_DOWN: // Effectuez une action pour la touche flèche du bas
                    Partie.AplDeplacementFusion("S");
                    Partie.afficher(tabLab);
                    break;
                case KeyEvent.VK_UP: // Effectuez une action pour la touche flèche du haut
                    Partie.AplDeplacementFusion("Z");
                    Partie.afficher(tabLab);
                    break;
                case KeyEvent.VK_LEFT: // Effectuez une action pour la touche flèche de gauche
                    Partie.AplDeplacementFusion("Q");
                    Partie.afficher(tabLab);
                    break;
                case KeyEvent.VK_RIGHT: // Effectuez une action pour la touche flèche de droite
                    Partie.AplDeplacementFusion("D");
                    Partie.afficher(tabLab);
                    break;
                default:
                    break;
            }
            jElmax.setText(ELmaxNom);
            jScore.setText(Long.toString(Partie.getScore()));
            if (Partie.FinPartie().equals("WIN")||Partie.FinPartie().equals("LOSE")){
                FAccueil dad=((FAccueil)getParent()).getFichAccueil();
                dad.getFichActions().setVisible(false);
                fin();
            }
        }
    }
    
    public void fin(){
        int newPartie;
        if (Partie.FinPartie().equals("WIN")){
            newPartie=JOptionPane.showConfirmDialog(this,"Félicitation vous avez réussi à atteintre l'élément "+ELmaxNom+" !! \n\n        Voulez-vous relancer une nouvelle partie?","Félicitation",YES_NO_OPTION);
        }
        else{
            newPartie=JOptionPane.showConfirmDialog(this,"Oups, vous n'avez pas réussi à atteintre l'élément "+ELmaxNom+" !! \n\n        Voulez-vous relancer une nouvelle partie?","Oups",YES_NO_OPTION);
        }
        if (newPartie==YES_OPTION){
            FAccueil dad=((FAccueil)getParent()).getFichAccueil();
            dad.getFichActions().setVisible(false);
            dad.getFichChoix().setVisible(true);
            this.setVisible(false);
            //FAccueil fichAccueil = new FAccueil();
            //this.setVisible(false);
            //fichAccueil.setVisible(true);
        }
        else if (newPartie==NO_OPTION){
            System.exit(0);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FJouer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FJouer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FJouer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FJouer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FJouer dialog = new FJouer(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JFJouer;
    private javax.swing.JLabel jElmax;
    private javax.swing.JLabel jScore;
    private javax.swing.JPanel pGrille;
    // End of variables declaration//GEN-END:variables

    public void keyReleased(KeyEvent e) {
        
    }
    
    public void keyTyped(KeyEvent e) {
        
    }
}
